// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaGranTitan.Data;

namespace PruebaGranTitan.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221003161643_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("PruebaGranTitan.Domain.Bet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberId")
                        .HasColumnType("int");

                    b.Property<int>("RouletteId")
                        .HasColumnType("int");

                    b.Property<double>("ValueBet")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("NumberId");

                    b.HasIndex("RouletteId");

                    b.ToTable("Bet");
                });

            modelBuilder.Entity("PruebaGranTitan.Domain.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("PruebaGranTitan.Domain.Number", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IdColor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Number");
                });

            modelBuilder.Entity("PruebaGranTitan.Domain.ResultBet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BetId")
                        .HasColumnType("int");

                    b.Property<double>("PaymentValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BetId");

                    b.ToTable("ResultBet");
                });

            modelBuilder.Entity("PruebaGranTitan.Domain.Roulette", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Roulette");
                });

            modelBuilder.Entity("PruebaGranTitan.Domain.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("PruebaGranTitan.Domain.Bet", b =>
                {
                    b.HasOne("PruebaGranTitan.Domain.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("PruebaGranTitan.Domain.Number", "Number")
                        .WithMany()
                        .HasForeignKey("NumberId");

                    b.HasOne("PruebaGranTitan.Domain.Roulette", "Roulette")
                        .WithMany()
                        .HasForeignKey("RouletteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Number");

                    b.Navigation("Roulette");
                });

            modelBuilder.Entity("PruebaGranTitan.Domain.ResultBet", b =>
                {
                    b.HasOne("PruebaGranTitan.Domain.Bet", "Bet")
                        .WithMany()
                        .HasForeignKey("BetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bet");
                });

            modelBuilder.Entity("PruebaGranTitan.Domain.Roulette", b =>
                {
                    b.HasOne("PruebaGranTitan.Domain.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });
#pragma warning restore 612, 618
        }
    }
}
